# .github/workflows/release.yml

name: Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      release_id: ${{ steps.create_release.outputs.id }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: 'App Release ${{ github.ref_name }}'
          draft: false
          prerelease: false

  build-tauri:
    needs: create-release
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, windows-latest, ubuntu-latest]
        include:
          - platform: ubuntu-latest
            os: linux # 用于 Android 构建
          - platform: macos-latest
            os: macos
          - platform: windows-latest
            os: windows

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Linux (Android build) system dependencies
        if: matrix.os == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev libglib2.0-dev libgtk-3-dev libwebkit2gtk-4.1-dev

      # =====================================================
      # ANDROID-SPECIFIC SETUP (runs only on ubuntu-latest)
      # =====================================================
      - name: Set up Java
        if: matrix.os == 'linux'
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Android SDK
        if: matrix.os == 'linux'
        uses: android-actions/setup-android@v3

      - name: Install NDK and other components with sdkmanager
        if: matrix.os == 'linux'
        run: |
          echo "y" | sdkmanager "ndk;25.2.9519653" "build-tools;34.0.0" "platforms;android-34"
      
      - name: Set NDK_HOME environment variable
        if: matrix.os == 'linux'
        run: echo "NDK_HOME=$ANDROID_HOME/ndk/25.2.9519653" >> $GITHUB_ENV

      - name: Decode and place Android signing key
        if: matrix.os == 'linux'
        run: |
          echo "${{ secrets.ANDROID_SIGNING_KEY }}" | base64 --decode > ${{ runner.temp }}/release.keystore

      # =====================================================
      # COMMON SETUP for Rust, Node, and Frontend
      # =====================================================
      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable
      
      - name: Install Rust target for Android
        if: matrix.os == 'linux'
        run: rustup target add aarch64-linux-android armv7-linux-androideabi

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Sync node version and setup cache
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'pnpm'

      - name: Install frontend dependencies
        run: pnpm install

      # =====================================================
      # BUILD STEP
      # =====================================================
      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_KEY_PATH: ${{ matrix.os == 'linux' && format('{0}/release.keystore', runner.temp) || '' }}
          TAURI_KEY_PASSWORD: ${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}
        with:
          releaseId: ${{ needs.create-release.outputs.release_id }}
          args: ${{ matrix.os == 'linux' && '--target android' || '' }}
